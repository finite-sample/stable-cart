[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "stable-cart"
version = "0.1.0"
description = "A stable decision tree (CART) implementation with prediction stability metrics."
authors = [
    { name = "Gaurav Sood", email = "contact@gsood.com" },
    { name = "Arav Bhosle", email = "aravbhosle@gmail.com"}
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.23.0",
    "scikit-learn>=1.2.0",
    "pandas>=1.5.0"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "matplotlib>=3.3.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
benchmark = [
    "seaborn>=0.11.0",
    "jupyterlab>=3.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["stable_cart*"]


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -v --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "e2e: end-to-end integration tests",
    "slow: slow running tests",
    "benchmark: benchmark tests",
]

[tool.coverage.run]
branch = true
source = ["stable_cart"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/benchmark/*",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
